@using System.Security.Claims
@model IEnumerable<TodoItem>

@{
    ViewData["Title"] = "Todo List";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">Todo List</h1>

    <!-- Add New Task Form -->
    <div class="card mb-4 shadow">
        <div class="card-body">
            <form asp-action="Create" method="post" class="d-flex gap-2 align-items-end">
                <div class="flex-grow-1">
                    <input type="text" name="Title"
                           class="form-control mb-2"
                           placeholder="Task title"
                           required>

                    <textarea name="Description"
                              class="form-control auto-resize"
                              placeholder="Task description"
                              rows="1"></textarea>
                </div>

                <button type="submit" class="btn btn-primary h-100">Add Task</button>
            </form>
        </div>
    </div>

    <!-- Active Tasks -->
    <div class="card mb-4 shadow">
        <div class="card-header bg-primary text-white">
            Active Tasks (@Model.Count(t => !t.Completed))
        </div>
        <ul class="list-group list-group-flush">
            @foreach (var item in Model.Where(t => !t.Completed))
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        <h5>@item.Title</h5>
                        @if (!string.IsNullOrEmpty(item.Description))
                        {
                            <p class="text-muted mb-0">@item.Description</p>
                        }
                        <small class="text-muted">Created: @item.CreatedDate.ToString("g")</small>
                    </div>
                    <div>
                        <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-primary btn-sm">Edit</a>
                        <form method="post" action="@Url.Action("ToggleComplete", new { id = item.Id })" class="d-inline">
                            <button type="submit" class="btn btn-success btn-sm">Complete</button>
                        </form>
                        <form method="post" action="@Url.Action("Delete", new { id = item.Id })" class="d-inline">
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </div>
                </li>
            }
        </ul>
    </div>

    <!-- Completed Tasks -->
    <div class="card shadow">
        <div class="card-header bg-success text-white">
            Completed Tasks (@Model.Count(t => t.Completed))
            <form method="post" action="@Url.Action("ClearCompleted")" class="float-right">
                <button type="submit" class="btn btn-danger btn-sm">Clear All</button>
            </form>
        </div>
        <ul class="list-group list-group-flush">
            @foreach (var item in Model.Where(t => t.Completed))
            {
                <li class="list-group-item d-flex justify-content-between align-items-center bg-light">
                    <div>
                        <h5 class="text-success"><s>@item.Title</s></h5>
                        @if (!string.IsNullOrEmpty(item.Description))
                        {
                            <p class="text-muted mb-0"><s>@item.Description</s></p>
                        }
                        <small class="text-muted">Created: @item.CreatedDate.ToString("g")</small>
                    </div>
                    <div>
                        <form method="post" action="@Url.Action("ToggleComplete", new { id = item.Id })" class="d-inline">
                            <button type="submit" class="btn btn-warning btn-sm">Undo</button>
                        </form>
                        <form method="post" action="@Url.Action("Delete", new { id = item.Id })" class="d-inline">
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </div>
                </li>
            }
        </ul>
    </div>
</div>

<style>
    body {
        background-color: #f8f9fa;
    }
    .card {
        border-radius: 15px;
    }
    .list-group-item {
        transition: all 0.3s ease;
    }
    .list-group-item:hover {
        transform: translateX(5px);
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
</style>